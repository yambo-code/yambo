#if defined _SLEPC && !defined _NL
SLEPC_objects = K_stored_in_a_slepc_matrix.o K_shell_matrix.o K_stored_in_a_nest_matrix.o \
                K_multiply_by_V_slepc.o K_multiply_by_V_transpose_slepc.o
#endif
#if defined _PAR_IO
PARIO_objects = K_compress.o
#endif
#if defined _SCALAPACK
SLK_objects = K_inversion_do_it_SLK.o
#endif
objs =	K_blocks.o K_driver_init.o K_dipoles.o K_IP.o K_IP_sort.o \
        K_Transitions_setup.o K_Transition_check.o \
        K_driver.o BSE_utilities.o K_WF_phases.o \
        K_fill_block_cyclic.o \
        YDIAGO_driver.o \
        K_kernel.o $(PARIO_objects) K_correlation_collisions_dir.o K_correlation_collisions_std.o K_exchange_collisions.o \
        K_correlation_kernel_dir.o K_correlation_kernel_std.o K_exchange_kernel.o \
        K_restart.o K_solvers.o K_Haydock.o K_Haydock_response.o K_Haydock_gather.o K_Haydock_scatter.o K_screened_interaction.o \
        K_inversion_do_it_full.o EPS_via_perturbative_inversion.o \
        K_inversion_driver.o K_diagonal.o K_inversion_Lo.o  K_inversion_restart.o K_inversion_engine.o \
        K_diago_driver.o K_diago_left_residuals.o K_diago_right_residuals.o K_diago_overlap_matrix.o \
        K_diago_perturbative.o K_diago_response_functions.o K_eps_interpolate.o \
        K_observables.o K_multiply_by_V.o K_multiply_by_V_transpose.o K_dot_product.o K_components_folded_in_serial_arrays.o \
        K_stored_in_a_big_matrix.o \
        PL_diago_residual.o PL_via_perturbative_inversion.o $(SLEPC_objects) $(SLK_objects)
